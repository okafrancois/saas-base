datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

generator client {
  provider = "prisma-client-js"
}

// Énumérations

enum UserRole {
  USER
  ADMIN
  SUPER_ADMIN
}

// Modèles principaux
model User {
  id       String   @id @default(cuid())
  email    String?  @unique
  phone    String?  @unique
  password String? // Hashed password if needed
  name     String?
  role     UserRole @default(USER)

  // Auth related
  emailVerified DateTime?
  phoneVerified DateTime?
  accounts      Account[]
  sessions      Session[]
  lastLogin     DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Auth related models
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime
  type       String

  @@unique([identifier, token])
}